<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>64</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ftgAAAAASUVORK5CYII=
</value>
  </data>
</root>